language: generic

env:
  global:
    - CHANS="-c pyviz"
    - LABELS_DEV="--label dev"
    - LABELS_REL="--label dev --label main"
    - PYENV_VERSION=3.7
    - PKG_TEST_PYTHON="--test-python=py37 --test-python=py27"

stages:
  - test
  - name: dev_package
    if: tag =~ ^v(\d+|\.)+[a-z]\d+$
  - name: package
    if: tag =~ ^v(\d+|\.)+[^a-z]\d+$
  - name: website_dev
    if: tag =~ ^v(\d+|\.)+[a-z]\d+$ OR tag = website_dev
  - name: website_release
    if: tag =~ ^v(\d+|\.)+[^a-z]\d+$ OR tag = website

jobs:
  include:
    - &default
      stage: test
      os: linux
      install:
        - pip install pyctdev && doit miniconda_install && pip uninstall -y doit pyctdev
        - export PATH="$HOME/miniconda/bin:$PATH" && hash -r
        - conda config --set always_yes True
        - conda install -c pyviz pyctdev && doit ecosystem_setup
      before_script:
        - doit env_create --name=contrib_colormaps --python=$PYENV_VERSION
        - source activate contrib_colormaps
        - doit develop_install $CHANS -o examples
        - doit env_capture
      script:
        - doit test_all


    - &website
      <<: *default
      stage: website_release
      script:
        - doit develop_install $CHANS -o doc -o examples
        - doit build_website

      deploy:
        - provider: pages
          skip_cleanup: true
          github_token: $GITHUB_TOKEN
          local_dir: ./builtdocs
          fqdn: contrib_colormaps.pyviz.org
          on:
            tags: true
            all_branches: true

    - <<: *website
      stage: website_dev
      deploy:
        - provider: pages
          skip_cleanup: true
          github_token: $GITHUB_TOKEN
          local_dir: ./builtdocs
          repo: pyviz-dev/contrib_colormaps
          on:
            tags: true
            all_branches: true

    ## dev packages

    - &pip_pkg
      env: PYPI=testpypi PYPIUSER=$TPPU PYPIPASS=$TPPP
      stage: dev_package
      install: pip install pyctdev && doit ecosystem=pip ecosystem_setup
      before_script:
        - doit ecosystem=pip package_build $PKG_TEST_PYTHON --test-group=unit --sdist-install-build-deps
      script: doit ecosystem=pip package_upload -u $PYPIUSER -p $PYPIPASS --pypi ${PYPI}

    - &conda_pkg
      <<: *default
      stage: dev_package
      env: LABELS=$LABELS_DEV
      before_script:
        - travis_wait 60 doit package_build $CHANS $PKG_TEST_PYTHON --test-group=unit
      script: doit package_upload --token=$ANACONDA_TOKEN $LABELS

    ## release packages

    - <<: *pip_pkg
      env: PYPI=pypi PYPIUSER=$PPU PYPIPASS=$PPP
      stage: package

    - <<: *conda_pkg
      stage: package
      env: LABELS=$LABELS_REL

notifications:
  email: false
